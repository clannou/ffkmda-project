version: "3.8"

# Define services
services:

  # Database Service (Mysql)
  mysql-db:
    image: mysql:latest 
    container_name: mysql-db
    ports:
      - "3307:3306"
    volumes:
      - ./my-db:/var/lib/mysql
      # copy the sql script to create tables
      - ./dump.sql:/dump.sql
    command: --init-file /dump.sql  
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD : taha@123
      MYSQL_USER : root
      #MYSQL_ALLOW_EMPTY_PASSWORD: "true"
    networks:
      - backend
      

 # phpmyadmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ffkmda-phpmyadmin 
    restart: always
    ports:
      # 8080 is the host port and 80 is the docker port
      - 8080:80
    environment:
      - MYSQL_USERNAME:root
      - MYSQL_ROOT_PASSWORD:taha@123
    networks:
    # define your network where all containers are connected to each other
      - backend
    links:
     - mysql-db 
    volumes:
    # define directory path where you shall store your persistent data and config 
    # files of phpmyadmin 
      - ./docker/phpmyadmin


  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    container_name: ffkmda-backend
    build:
      context: ffkmda-back # Use an image built from the specified dockerfile in the `ffkmda-back` directory.
      dockerfile: Dockerfile
    ports:
      - "9007:9007" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    links: 
      - mysql-db
    depends_on: 
      - mysql-db # This service depends on mysql. Start that first.
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3307/ffkmda_db?autoReconnect=true&useSSL=false
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: taha@123

      #- DEFAULT_PATH=<Target path in windows>      
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend


  # Frontend Service 
  app-client:
    container_name: ffkmda-frontent
    build:
      context: ffkmda-front # Use an image built from the specified dockerfile in the `ffkmda-front` directory.
      dockerfile: Dockerfile
    ports:
      - "9001:9001" # Map the exposed port 80 on the container to port 8081 on the host machine
    restart: always
    depends_on:
      - app-server
    networks:
      - frontend





volumes:
  my-db:

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend:      